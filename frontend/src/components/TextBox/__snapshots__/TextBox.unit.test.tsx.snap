// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextBox Displays correct product when message mode 1`] = `
<ForwardRef
  id="textBox"
  message={true}
>
  <div
    className="makeStyles-root-1"
  >
    <WithStyles(ForwardRef(TextField))
      className="makeStyles-textField-2"
      id="textBox"
      inputRef={null}
      label="Enter your message here"
      multiline={true}
      variant="outlined"
    >
      <ForwardRef(TextField)
        className="makeStyles-textField-2"
        classes={
          Object {
            "root": "MuiTextField-root",
          }
        }
        id="textBox"
        inputRef={null}
        label="Enter your message here"
        multiline={true}
        variant="outlined"
      >
        <WithStyles(ForwardRef(FormControl))
          className="MuiTextField-root makeStyles-textField-2"
          color="primary"
          disabled={false}
          error={false}
          fullWidth={false}
          required={false}
          variant="outlined"
        >
          <ForwardRef(FormControl)
            className="MuiTextField-root makeStyles-textField-2"
            classes={
              Object {
                "fullWidth": "MuiFormControl-fullWidth",
                "marginDense": "MuiFormControl-marginDense",
                "marginNormal": "MuiFormControl-marginNormal",
                "root": "MuiFormControl-root",
              }
            }
            color="primary"
            disabled={false}
            error={false}
            fullWidth={false}
            required={false}
            variant="outlined"
          >
            <div
              className="MuiFormControl-root MuiTextField-root makeStyles-textField-2"
            >
              <WithStyles(ForwardRef(InputLabel))
                htmlFor="textBox"
                id="textBox-label"
              >
                <ForwardRef(InputLabel)
                  classes={
                    Object {
                      "animated": "MuiInputLabel-animated",
                      "asterisk": "MuiInputLabel-asterisk",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "filled": "MuiInputLabel-filled",
                      "focused": "Mui-focused",
                      "formControl": "MuiInputLabel-formControl",
                      "marginDense": "MuiInputLabel-marginDense",
                      "outlined": "MuiInputLabel-outlined",
                      "required": "Mui-required",
                      "root": "MuiInputLabel-root",
                      "shrink": "MuiInputLabel-shrink",
                    }
                  }
                  htmlFor="textBox"
                  id="textBox-label"
                >
                  <WithStyles(ForwardRef(FormLabel))
                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                    classes={
                      Object {
                        "asterisk": "MuiInputLabel-asterisk",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "required": "Mui-required",
                      }
                    }
                    data-shrink={false}
                    htmlFor="textBox"
                    id="textBox-label"
                  >
                    <ForwardRef(FormLabel)
                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                      classes={
                        Object {
                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                          "colorSecondary": "MuiFormLabel-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "filled": "MuiFormLabel-filled",
                          "focused": "Mui-focused Mui-focused",
                          "required": "Mui-required Mui-required",
                          "root": "MuiFormLabel-root",
                        }
                      }
                      data-shrink={false}
                      htmlFor="textBox"
                      id="textBox-label"
                    >
                      <label
                        className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                        data-shrink={false}
                        htmlFor="textBox"
                        id="textBox-label"
                      >
                        Enter your message here
                      </label>
                    </ForwardRef(FormLabel)>
                  </WithStyles(ForwardRef(FormLabel))>
                </ForwardRef(InputLabel)>
              </WithStyles(ForwardRef(InputLabel))>
              <WithStyles(ForwardRef(OutlinedInput))
                autoFocus={false}
                fullWidth={false}
                id="textBox"
                inputRef={null}
                label={
                  <React.Fragment>
                    Enter your message here
                  </React.Fragment>
                }
                multiline={true}
              >
                <ForwardRef(OutlinedInput)
                  autoFocus={false}
                  classes={
                    Object {
                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                      "adornedStart": "MuiOutlinedInput-adornedStart",
                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "input": "MuiOutlinedInput-input",
                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                      "marginDense": "MuiOutlinedInput-marginDense",
                      "multiline": "MuiOutlinedInput-multiline",
                      "notchedOutline": "MuiOutlinedInput-notchedOutline",
                      "root": "MuiOutlinedInput-root",
                    }
                  }
                  fullWidth={false}
                  id="textBox"
                  inputRef={null}
                  label={
                    <React.Fragment>
                      Enter your message here
                    </React.Fragment>
                  }
                  multiline={true}
                >
                  <WithStyles(ForwardRef(InputBase))
                    autoFocus={false}
                    classes={
                      Object {
                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                        "adornedStart": "MuiOutlinedInput-adornedStart",
                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "input": "MuiOutlinedInput-input",
                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                        "marginDense": "MuiOutlinedInput-marginDense",
                        "multiline": "MuiOutlinedInput-multiline",
                        "notchedOutline": null,
                        "root": "MuiOutlinedInput-root",
                      }
                    }
                    fullWidth={false}
                    id="textBox"
                    inputComponent="input"
                    inputRef={null}
                    multiline={true}
                    renderSuffix={[Function]}
                    type="text"
                  >
                    <ForwardRef(InputBase)
                      autoFocus={false}
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "focused": "Mui-focused Mui-focused",
                          "formControl": "MuiInputBase-formControl",
                          "fullWidth": "MuiInputBase-fullWidth",
                          "input": "MuiInputBase-input MuiOutlinedInput-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                          "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                          "root": "MuiInputBase-root MuiOutlinedInput-root",
                        }
                      }
                      fullWidth={false}
                      id="textBox"
                      inputComponent="input"
                      inputRef={null}
                      multiline={true}
                      renderSuffix={[Function]}
                      type="text"
                    >
                      <div
                        className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-multiline MuiOutlinedInput-multiline"
                        onClick={[Function]}
                      >
                        <ForwardRef(TextareaAutosize)
                          aria-invalid={false}
                          autoFocus={false}
                          className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline"
                          disabled={false}
                          id="textBox"
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                        >
                          <textarea
                            aria-invalid={false}
                            autoFocus={false}
                            className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline"
                            disabled={false}
                            id="textBox"
                            onAnimationStart={[Function]}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            rows={1}
                            style={
                              Object {
                                "height": 0,
                                "overflow": "hidden",
                              }
                            }
                          />
                          <textarea
                            aria-hidden={true}
                            className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline"
                            readOnly={true}
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "hidden",
                                "position": "absolute",
                                "top": 0,
                                "transform": "translateZ(0)",
                                "visibility": "hidden",
                              }
                            }
                            tabIndex={-1}
                          />
                        </ForwardRef(TextareaAutosize)>
                        <WithStyles(ForwardRef(NotchedOutline))
                          className="MuiOutlinedInput-notchedOutline"
                          label={
                            <React.Fragment>
                              Enter your message here
                            </React.Fragment>
                          }
                          labelWidth={0}
                          notched={false}
                        >
                          <ForwardRef(NotchedOutline)
                            className="MuiOutlinedInput-notchedOutline"
                            classes={
                              Object {
                                "legend": "PrivateNotchedOutline-legend-62",
                                "legendLabelled": "PrivateNotchedOutline-legendLabelled-63",
                                "legendNotched": "PrivateNotchedOutline-legendNotched-64",
                                "root": "PrivateNotchedOutline-root-61",
                              }
                            }
                            label={
                              <React.Fragment>
                                Enter your message here
                              </React.Fragment>
                            }
                            labelWidth={0}
                            notched={false}
                          >
                            <fieldset
                              aria-hidden={true}
                              className="PrivateNotchedOutline-root-61 MuiOutlinedInput-notchedOutline"
                            >
                              <legend
                                className="PrivateNotchedOutline-legendLabelled-63"
                              >
                                <span>
                                  Enter your message here
                                </span>
                              </legend>
                            </fieldset>
                          </ForwardRef(NotchedOutline)>
                        </WithStyles(ForwardRef(NotchedOutline))>
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </ForwardRef(OutlinedInput)>
              </WithStyles(ForwardRef(OutlinedInput))>
            </div>
          </ForwardRef(FormControl)>
        </WithStyles(ForwardRef(FormControl))>
      </ForwardRef(TextField)>
    </WithStyles(ForwardRef(TextField))>
  </div>
</ForwardRef>
`;

exports[`TextBox Displays correct product when password mode 1`] = `
<ForwardRef
  id="textBox"
  password={true}
>
  <div
    className="makeStyles-root-1"
  >
    <WithStyles(ForwardRef(TextField))
      className="makeStyles-textField-2"
      id="textBox"
      inputRef={null}
      label="Enter your password here"
      multiline={false}
      rows={1}
      type="password"
      variant="outlined"
    >
      <ForwardRef(TextField)
        className="makeStyles-textField-2"
        classes={
          Object {
            "root": "MuiTextField-root",
          }
        }
        id="textBox"
        inputRef={null}
        label="Enter your password here"
        multiline={false}
        rows={1}
        type="password"
        variant="outlined"
      >
        <WithStyles(ForwardRef(FormControl))
          className="MuiTextField-root makeStyles-textField-2"
          color="primary"
          disabled={false}
          error={false}
          fullWidth={false}
          required={false}
          variant="outlined"
        >
          <ForwardRef(FormControl)
            className="MuiTextField-root makeStyles-textField-2"
            classes={
              Object {
                "fullWidth": "MuiFormControl-fullWidth",
                "marginDense": "MuiFormControl-marginDense",
                "marginNormal": "MuiFormControl-marginNormal",
                "root": "MuiFormControl-root",
              }
            }
            color="primary"
            disabled={false}
            error={false}
            fullWidth={false}
            required={false}
            variant="outlined"
          >
            <div
              className="MuiFormControl-root MuiTextField-root makeStyles-textField-2"
            >
              <WithStyles(ForwardRef(InputLabel))
                htmlFor="textBox"
                id="textBox-label"
              >
                <ForwardRef(InputLabel)
                  classes={
                    Object {
                      "animated": "MuiInputLabel-animated",
                      "asterisk": "MuiInputLabel-asterisk",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "filled": "MuiInputLabel-filled",
                      "focused": "Mui-focused",
                      "formControl": "MuiInputLabel-formControl",
                      "marginDense": "MuiInputLabel-marginDense",
                      "outlined": "MuiInputLabel-outlined",
                      "required": "Mui-required",
                      "root": "MuiInputLabel-root",
                      "shrink": "MuiInputLabel-shrink",
                    }
                  }
                  htmlFor="textBox"
                  id="textBox-label"
                >
                  <WithStyles(ForwardRef(FormLabel))
                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                    classes={
                      Object {
                        "asterisk": "MuiInputLabel-asterisk",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "required": "Mui-required",
                      }
                    }
                    data-shrink={false}
                    htmlFor="textBox"
                    id="textBox-label"
                  >
                    <ForwardRef(FormLabel)
                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                      classes={
                        Object {
                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                          "colorSecondary": "MuiFormLabel-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "filled": "MuiFormLabel-filled",
                          "focused": "Mui-focused Mui-focused",
                          "required": "Mui-required Mui-required",
                          "root": "MuiFormLabel-root",
                        }
                      }
                      data-shrink={false}
                      htmlFor="textBox"
                      id="textBox-label"
                    >
                      <label
                        className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                        data-shrink={false}
                        htmlFor="textBox"
                        id="textBox-label"
                      >
                        Enter your password here
                      </label>
                    </ForwardRef(FormLabel)>
                  </WithStyles(ForwardRef(FormLabel))>
                </ForwardRef(InputLabel)>
              </WithStyles(ForwardRef(InputLabel))>
              <WithStyles(ForwardRef(OutlinedInput))
                autoFocus={false}
                fullWidth={false}
                id="textBox"
                inputRef={null}
                label={
                  <React.Fragment>
                    Enter your password here
                  </React.Fragment>
                }
                multiline={false}
                rows={1}
                type="password"
              >
                <ForwardRef(OutlinedInput)
                  autoFocus={false}
                  classes={
                    Object {
                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                      "adornedStart": "MuiOutlinedInput-adornedStart",
                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "input": "MuiOutlinedInput-input",
                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                      "marginDense": "MuiOutlinedInput-marginDense",
                      "multiline": "MuiOutlinedInput-multiline",
                      "notchedOutline": "MuiOutlinedInput-notchedOutline",
                      "root": "MuiOutlinedInput-root",
                    }
                  }
                  fullWidth={false}
                  id="textBox"
                  inputRef={null}
                  label={
                    <React.Fragment>
                      Enter your password here
                    </React.Fragment>
                  }
                  multiline={false}
                  rows={1}
                  type="password"
                >
                  <WithStyles(ForwardRef(InputBase))
                    autoFocus={false}
                    classes={
                      Object {
                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                        "adornedStart": "MuiOutlinedInput-adornedStart",
                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "input": "MuiOutlinedInput-input",
                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                        "marginDense": "MuiOutlinedInput-marginDense",
                        "multiline": "MuiOutlinedInput-multiline",
                        "notchedOutline": null,
                        "root": "MuiOutlinedInput-root",
                      }
                    }
                    fullWidth={false}
                    id="textBox"
                    inputComponent="input"
                    inputRef={null}
                    multiline={false}
                    renderSuffix={[Function]}
                    rows={1}
                    type="password"
                  >
                    <ForwardRef(InputBase)
                      autoFocus={false}
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "focused": "Mui-focused Mui-focused",
                          "formControl": "MuiInputBase-formControl",
                          "fullWidth": "MuiInputBase-fullWidth",
                          "input": "MuiInputBase-input MuiOutlinedInput-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                          "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                          "root": "MuiInputBase-root MuiOutlinedInput-root",
                        }
                      }
                      fullWidth={false}
                      id="textBox"
                      inputComponent="input"
                      inputRef={null}
                      multiline={false}
                      renderSuffix={[Function]}
                      rows={1}
                      type="password"
                    >
                      <div
                        className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                        onClick={[Function]}
                      >
                        <input
                          aria-invalid={false}
                          autoFocus={false}
                          className="MuiInputBase-input MuiOutlinedInput-input"
                          disabled={false}
                          id="textBox"
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          rows={1}
                          type="password"
                        />
                        <WithStyles(ForwardRef(NotchedOutline))
                          className="MuiOutlinedInput-notchedOutline"
                          label={
                            <React.Fragment>
                              Enter your password here
                            </React.Fragment>
                          }
                          labelWidth={0}
                          notched={false}
                        >
                          <ForwardRef(NotchedOutline)
                            className="MuiOutlinedInput-notchedOutline"
                            classes={
                              Object {
                                "legend": "PrivateNotchedOutline-legend-62",
                                "legendLabelled": "PrivateNotchedOutline-legendLabelled-63",
                                "legendNotched": "PrivateNotchedOutline-legendNotched-64",
                                "root": "PrivateNotchedOutline-root-61",
                              }
                            }
                            label={
                              <React.Fragment>
                                Enter your password here
                              </React.Fragment>
                            }
                            labelWidth={0}
                            notched={false}
                          >
                            <fieldset
                              aria-hidden={true}
                              className="PrivateNotchedOutline-root-61 MuiOutlinedInput-notchedOutline"
                            >
                              <legend
                                className="PrivateNotchedOutline-legendLabelled-63"
                              >
                                <span>
                                  Enter your password here
                                </span>
                              </legend>
                            </fieldset>
                          </ForwardRef(NotchedOutline)>
                        </WithStyles(ForwardRef(NotchedOutline))>
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </ForwardRef(OutlinedInput)>
              </WithStyles(ForwardRef(OutlinedInput))>
            </div>
          </ForwardRef(FormControl)>
        </WithStyles(ForwardRef(FormControl))>
      </ForwardRef(TextField)>
    </WithStyles(ForwardRef(TextField))>
  </div>
</ForwardRef>
`;

exports[`TextBox Displays correct product when user mode 1`] = `
<ForwardRef
  id="textBox"
  product="name"
  user={true}
>
  <div
    className="makeStyles-root-1"
  >
    <WithStyles(ForwardRef(TextField))
      className="makeStyles-textField-2"
      id="textBox"
      inputRef={null}
      label="Enter your name here"
      multiline={true}
      rows={1}
      variant="outlined"
    >
      <ForwardRef(TextField)
        className="makeStyles-textField-2"
        classes={
          Object {
            "root": "MuiTextField-root",
          }
        }
        id="textBox"
        inputRef={null}
        label="Enter your name here"
        multiline={true}
        rows={1}
        variant="outlined"
      >
        <WithStyles(ForwardRef(FormControl))
          className="MuiTextField-root makeStyles-textField-2"
          color="primary"
          disabled={false}
          error={false}
          fullWidth={false}
          required={false}
          variant="outlined"
        >
          <ForwardRef(FormControl)
            className="MuiTextField-root makeStyles-textField-2"
            classes={
              Object {
                "fullWidth": "MuiFormControl-fullWidth",
                "marginDense": "MuiFormControl-marginDense",
                "marginNormal": "MuiFormControl-marginNormal",
                "root": "MuiFormControl-root",
              }
            }
            color="primary"
            disabled={false}
            error={false}
            fullWidth={false}
            required={false}
            variant="outlined"
          >
            <div
              className="MuiFormControl-root MuiTextField-root makeStyles-textField-2"
            >
              <WithStyles(ForwardRef(InputLabel))
                htmlFor="textBox"
                id="textBox-label"
              >
                <ForwardRef(InputLabel)
                  classes={
                    Object {
                      "animated": "MuiInputLabel-animated",
                      "asterisk": "MuiInputLabel-asterisk",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "filled": "MuiInputLabel-filled",
                      "focused": "Mui-focused",
                      "formControl": "MuiInputLabel-formControl",
                      "marginDense": "MuiInputLabel-marginDense",
                      "outlined": "MuiInputLabel-outlined",
                      "required": "Mui-required",
                      "root": "MuiInputLabel-root",
                      "shrink": "MuiInputLabel-shrink",
                    }
                  }
                  htmlFor="textBox"
                  id="textBox-label"
                >
                  <WithStyles(ForwardRef(FormLabel))
                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                    classes={
                      Object {
                        "asterisk": "MuiInputLabel-asterisk",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "required": "Mui-required",
                      }
                    }
                    data-shrink={false}
                    htmlFor="textBox"
                    id="textBox-label"
                  >
                    <ForwardRef(FormLabel)
                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                      classes={
                        Object {
                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                          "colorSecondary": "MuiFormLabel-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "filled": "MuiFormLabel-filled",
                          "focused": "Mui-focused Mui-focused",
                          "required": "Mui-required Mui-required",
                          "root": "MuiFormLabel-root",
                        }
                      }
                      data-shrink={false}
                      htmlFor="textBox"
                      id="textBox-label"
                    >
                      <label
                        className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                        data-shrink={false}
                        htmlFor="textBox"
                        id="textBox-label"
                      >
                        Enter your name here
                      </label>
                    </ForwardRef(FormLabel)>
                  </WithStyles(ForwardRef(FormLabel))>
                </ForwardRef(InputLabel)>
              </WithStyles(ForwardRef(InputLabel))>
              <WithStyles(ForwardRef(OutlinedInput))
                autoFocus={false}
                fullWidth={false}
                id="textBox"
                inputRef={null}
                label={
                  <React.Fragment>
                    Enter your name here
                  </React.Fragment>
                }
                multiline={true}
                rows={1}
              >
                <ForwardRef(OutlinedInput)
                  autoFocus={false}
                  classes={
                    Object {
                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                      "adornedStart": "MuiOutlinedInput-adornedStart",
                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "input": "MuiOutlinedInput-input",
                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                      "marginDense": "MuiOutlinedInput-marginDense",
                      "multiline": "MuiOutlinedInput-multiline",
                      "notchedOutline": "MuiOutlinedInput-notchedOutline",
                      "root": "MuiOutlinedInput-root",
                    }
                  }
                  fullWidth={false}
                  id="textBox"
                  inputRef={null}
                  label={
                    <React.Fragment>
                      Enter your name here
                    </React.Fragment>
                  }
                  multiline={true}
                  rows={1}
                >
                  <WithStyles(ForwardRef(InputBase))
                    autoFocus={false}
                    classes={
                      Object {
                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                        "adornedStart": "MuiOutlinedInput-adornedStart",
                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "input": "MuiOutlinedInput-input",
                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                        "marginDense": "MuiOutlinedInput-marginDense",
                        "multiline": "MuiOutlinedInput-multiline",
                        "notchedOutline": null,
                        "root": "MuiOutlinedInput-root",
                      }
                    }
                    fullWidth={false}
                    id="textBox"
                    inputComponent="input"
                    inputRef={null}
                    multiline={true}
                    renderSuffix={[Function]}
                    rows={1}
                    type="text"
                  >
                    <ForwardRef(InputBase)
                      autoFocus={false}
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "focused": "Mui-focused Mui-focused",
                          "formControl": "MuiInputBase-formControl",
                          "fullWidth": "MuiInputBase-fullWidth",
                          "input": "MuiInputBase-input MuiOutlinedInput-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                          "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                          "root": "MuiInputBase-root MuiOutlinedInput-root",
                        }
                      }
                      fullWidth={false}
                      id="textBox"
                      inputComponent="input"
                      inputRef={null}
                      multiline={true}
                      renderSuffix={[Function]}
                      rows={1}
                      type="text"
                    >
                      <div
                        className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-multiline MuiOutlinedInput-multiline"
                        onClick={[Function]}
                      >
                        <textarea
                          aria-invalid={false}
                          autoFocus={false}
                          className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline"
                          disabled={false}
                          id="textBox"
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          rows={1}
                        />
                        <WithStyles(ForwardRef(NotchedOutline))
                          className="MuiOutlinedInput-notchedOutline"
                          label={
                            <React.Fragment>
                              Enter your name here
                            </React.Fragment>
                          }
                          labelWidth={0}
                          notched={false}
                        >
                          <ForwardRef(NotchedOutline)
                            className="MuiOutlinedInput-notchedOutline"
                            classes={
                              Object {
                                "legend": "PrivateNotchedOutline-legend-62",
                                "legendLabelled": "PrivateNotchedOutline-legendLabelled-63",
                                "legendNotched": "PrivateNotchedOutline-legendNotched-64",
                                "root": "PrivateNotchedOutline-root-61",
                              }
                            }
                            label={
                              <React.Fragment>
                                Enter your name here
                              </React.Fragment>
                            }
                            labelWidth={0}
                            notched={false}
                          >
                            <fieldset
                              aria-hidden={true}
                              className="PrivateNotchedOutline-root-61 MuiOutlinedInput-notchedOutline"
                            >
                              <legend
                                className="PrivateNotchedOutline-legendLabelled-63"
                              >
                                <span>
                                  Enter your name here
                                </span>
                              </legend>
                            </fieldset>
                          </ForwardRef(NotchedOutline)>
                        </WithStyles(ForwardRef(NotchedOutline))>
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </ForwardRef(OutlinedInput)>
              </WithStyles(ForwardRef(OutlinedInput))>
            </div>
          </ForwardRef(FormControl)>
        </WithStyles(ForwardRef(FormControl))>
      </ForwardRef(TextField)>
    </WithStyles(ForwardRef(TextField))>
  </div>
</ForwardRef>
`;

exports[`TextBox Renders  1`] = `
<div
  className="makeStyles-root-1"
>
  <WithStyles(ForwardRef(TextField))
    className="makeStyles-textField-2"
    id="textBoxUserName"
    inputRef={null}
    label="Enter your name here"
    multiline={true}
    rows={1}
    variant="outlined"
  />
</div>
`;

exports[`TextBox Renders  2`] = `
<div
  className="makeStyles-root-1"
>
  <WithStyles(ForwardRef(TextField))
    className="makeStyles-textField-2"
    id="textBoxPassword"
    inputRef={null}
    label="Enter your password here"
    multiline={false}
    rows={1}
    type="password"
    variant="outlined"
  />
</div>
`;

exports[`TextBox Renders  3`] = `
<div
  className="makeStyles-root-1"
>
  <WithStyles(ForwardRef(TextField))
    className="makeStyles-textField-2"
    id="textBoxMessage"
    inputRef={null}
    label="Enter your message here"
    multiline={true}
    variant="outlined"
  />
</div>
`;

exports[`TextBox Renders 1 rows when not message mode 1`] = `
<ForwardRef
  id="textBox"
  product="name"
  user={true}
>
  <div
    className="makeStyles-root-1"
  >
    <WithStyles(ForwardRef(TextField))
      className="makeStyles-textField-2"
      id="textBox"
      inputRef={null}
      label="Enter your name here"
      multiline={true}
      rows={1}
      variant="outlined"
    >
      <ForwardRef(TextField)
        className="makeStyles-textField-2"
        classes={
          Object {
            "root": "MuiTextField-root",
          }
        }
        id="textBox"
        inputRef={null}
        label="Enter your name here"
        multiline={true}
        rows={1}
        variant="outlined"
      >
        <WithStyles(ForwardRef(FormControl))
          className="MuiTextField-root makeStyles-textField-2"
          color="primary"
          disabled={false}
          error={false}
          fullWidth={false}
          required={false}
          variant="outlined"
        >
          <ForwardRef(FormControl)
            className="MuiTextField-root makeStyles-textField-2"
            classes={
              Object {
                "fullWidth": "MuiFormControl-fullWidth",
                "marginDense": "MuiFormControl-marginDense",
                "marginNormal": "MuiFormControl-marginNormal",
                "root": "MuiFormControl-root",
              }
            }
            color="primary"
            disabled={false}
            error={false}
            fullWidth={false}
            required={false}
            variant="outlined"
          >
            <div
              className="MuiFormControl-root MuiTextField-root makeStyles-textField-2"
            >
              <WithStyles(ForwardRef(InputLabel))
                htmlFor="textBox"
                id="textBox-label"
              >
                <ForwardRef(InputLabel)
                  classes={
                    Object {
                      "animated": "MuiInputLabel-animated",
                      "asterisk": "MuiInputLabel-asterisk",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "filled": "MuiInputLabel-filled",
                      "focused": "Mui-focused",
                      "formControl": "MuiInputLabel-formControl",
                      "marginDense": "MuiInputLabel-marginDense",
                      "outlined": "MuiInputLabel-outlined",
                      "required": "Mui-required",
                      "root": "MuiInputLabel-root",
                      "shrink": "MuiInputLabel-shrink",
                    }
                  }
                  htmlFor="textBox"
                  id="textBox-label"
                >
                  <WithStyles(ForwardRef(FormLabel))
                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                    classes={
                      Object {
                        "asterisk": "MuiInputLabel-asterisk",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "required": "Mui-required",
                      }
                    }
                    data-shrink={false}
                    htmlFor="textBox"
                    id="textBox-label"
                  >
                    <ForwardRef(FormLabel)
                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                      classes={
                        Object {
                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                          "colorSecondary": "MuiFormLabel-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "filled": "MuiFormLabel-filled",
                          "focused": "Mui-focused Mui-focused",
                          "required": "Mui-required Mui-required",
                          "root": "MuiFormLabel-root",
                        }
                      }
                      data-shrink={false}
                      htmlFor="textBox"
                      id="textBox-label"
                    >
                      <label
                        className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                        data-shrink={false}
                        htmlFor="textBox"
                        id="textBox-label"
                      >
                        Enter your name here
                      </label>
                    </ForwardRef(FormLabel)>
                  </WithStyles(ForwardRef(FormLabel))>
                </ForwardRef(InputLabel)>
              </WithStyles(ForwardRef(InputLabel))>
              <WithStyles(ForwardRef(OutlinedInput))
                autoFocus={false}
                fullWidth={false}
                id="textBox"
                inputRef={null}
                label={
                  <React.Fragment>
                    Enter your name here
                  </React.Fragment>
                }
                multiline={true}
                rows={1}
              >
                <ForwardRef(OutlinedInput)
                  autoFocus={false}
                  classes={
                    Object {
                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                      "adornedStart": "MuiOutlinedInput-adornedStart",
                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "input": "MuiOutlinedInput-input",
                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                      "marginDense": "MuiOutlinedInput-marginDense",
                      "multiline": "MuiOutlinedInput-multiline",
                      "notchedOutline": "MuiOutlinedInput-notchedOutline",
                      "root": "MuiOutlinedInput-root",
                    }
                  }
                  fullWidth={false}
                  id="textBox"
                  inputRef={null}
                  label={
                    <React.Fragment>
                      Enter your name here
                    </React.Fragment>
                  }
                  multiline={true}
                  rows={1}
                >
                  <WithStyles(ForwardRef(InputBase))
                    autoFocus={false}
                    classes={
                      Object {
                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                        "adornedStart": "MuiOutlinedInput-adornedStart",
                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "input": "MuiOutlinedInput-input",
                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                        "marginDense": "MuiOutlinedInput-marginDense",
                        "multiline": "MuiOutlinedInput-multiline",
                        "notchedOutline": null,
                        "root": "MuiOutlinedInput-root",
                      }
                    }
                    fullWidth={false}
                    id="textBox"
                    inputComponent="input"
                    inputRef={null}
                    multiline={true}
                    renderSuffix={[Function]}
                    rows={1}
                    type="text"
                  >
                    <ForwardRef(InputBase)
                      autoFocus={false}
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "focused": "Mui-focused Mui-focused",
                          "formControl": "MuiInputBase-formControl",
                          "fullWidth": "MuiInputBase-fullWidth",
                          "input": "MuiInputBase-input MuiOutlinedInput-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                          "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                          "root": "MuiInputBase-root MuiOutlinedInput-root",
                        }
                      }
                      fullWidth={false}
                      id="textBox"
                      inputComponent="input"
                      inputRef={null}
                      multiline={true}
                      renderSuffix={[Function]}
                      rows={1}
                      type="text"
                    >
                      <div
                        className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-multiline MuiOutlinedInput-multiline"
                        onClick={[Function]}
                      >
                        <textarea
                          aria-invalid={false}
                          autoFocus={false}
                          className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline"
                          disabled={false}
                          id="textBox"
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          rows={1}
                        />
                        <WithStyles(ForwardRef(NotchedOutline))
                          className="MuiOutlinedInput-notchedOutline"
                          label={
                            <React.Fragment>
                              Enter your name here
                            </React.Fragment>
                          }
                          labelWidth={0}
                          notched={false}
                        >
                          <ForwardRef(NotchedOutline)
                            className="MuiOutlinedInput-notchedOutline"
                            classes={
                              Object {
                                "legend": "PrivateNotchedOutline-legend-62",
                                "legendLabelled": "PrivateNotchedOutline-legendLabelled-63",
                                "legendNotched": "PrivateNotchedOutline-legendNotched-64",
                                "root": "PrivateNotchedOutline-root-61",
                              }
                            }
                            label={
                              <React.Fragment>
                                Enter your name here
                              </React.Fragment>
                            }
                            labelWidth={0}
                            notched={false}
                          >
                            <fieldset
                              aria-hidden={true}
                              className="PrivateNotchedOutline-root-61 MuiOutlinedInput-notchedOutline"
                            >
                              <legend
                                className="PrivateNotchedOutline-legendLabelled-63"
                              >
                                <span>
                                  Enter your name here
                                </span>
                              </legend>
                            </fieldset>
                          </ForwardRef(NotchedOutline)>
                        </WithStyles(ForwardRef(NotchedOutline))>
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </ForwardRef(OutlinedInput)>
              </WithStyles(ForwardRef(OutlinedInput))>
            </div>
          </ForwardRef(FormControl)>
        </WithStyles(ForwardRef(FormControl))>
      </ForwardRef(TextField)>
    </WithStyles(ForwardRef(TextField))>
  </div>
</ForwardRef>
`;

exports[`TextBox Renders 1 rows when not message mode 2`] = `
<ForwardRef
  id="textBox"
  password={true}
>
  <div
    className="makeStyles-root-1"
  >
    <WithStyles(ForwardRef(TextField))
      className="makeStyles-textField-2"
      id="textBox"
      inputRef={null}
      label="Enter your password here"
      multiline={false}
      rows={1}
      type="password"
      variant="outlined"
    >
      <ForwardRef(TextField)
        className="makeStyles-textField-2"
        classes={
          Object {
            "root": "MuiTextField-root",
          }
        }
        id="textBox"
        inputRef={null}
        label="Enter your password here"
        multiline={false}
        rows={1}
        type="password"
        variant="outlined"
      >
        <WithStyles(ForwardRef(FormControl))
          className="MuiTextField-root makeStyles-textField-2"
          color="primary"
          disabled={false}
          error={false}
          fullWidth={false}
          required={false}
          variant="outlined"
        >
          <ForwardRef(FormControl)
            className="MuiTextField-root makeStyles-textField-2"
            classes={
              Object {
                "fullWidth": "MuiFormControl-fullWidth",
                "marginDense": "MuiFormControl-marginDense",
                "marginNormal": "MuiFormControl-marginNormal",
                "root": "MuiFormControl-root",
              }
            }
            color="primary"
            disabled={false}
            error={false}
            fullWidth={false}
            required={false}
            variant="outlined"
          >
            <div
              className="MuiFormControl-root MuiTextField-root makeStyles-textField-2"
            >
              <WithStyles(ForwardRef(InputLabel))
                htmlFor="textBox"
                id="textBox-label"
              >
                <ForwardRef(InputLabel)
                  classes={
                    Object {
                      "animated": "MuiInputLabel-animated",
                      "asterisk": "MuiInputLabel-asterisk",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "filled": "MuiInputLabel-filled",
                      "focused": "Mui-focused",
                      "formControl": "MuiInputLabel-formControl",
                      "marginDense": "MuiInputLabel-marginDense",
                      "outlined": "MuiInputLabel-outlined",
                      "required": "Mui-required",
                      "root": "MuiInputLabel-root",
                      "shrink": "MuiInputLabel-shrink",
                    }
                  }
                  htmlFor="textBox"
                  id="textBox-label"
                >
                  <WithStyles(ForwardRef(FormLabel))
                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                    classes={
                      Object {
                        "asterisk": "MuiInputLabel-asterisk",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "required": "Mui-required",
                      }
                    }
                    data-shrink={false}
                    htmlFor="textBox"
                    id="textBox-label"
                  >
                    <ForwardRef(FormLabel)
                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                      classes={
                        Object {
                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                          "colorSecondary": "MuiFormLabel-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "filled": "MuiFormLabel-filled",
                          "focused": "Mui-focused Mui-focused",
                          "required": "Mui-required Mui-required",
                          "root": "MuiFormLabel-root",
                        }
                      }
                      data-shrink={false}
                      htmlFor="textBox"
                      id="textBox-label"
                    >
                      <label
                        className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                        data-shrink={false}
                        htmlFor="textBox"
                        id="textBox-label"
                      >
                        Enter your password here
                      </label>
                    </ForwardRef(FormLabel)>
                  </WithStyles(ForwardRef(FormLabel))>
                </ForwardRef(InputLabel)>
              </WithStyles(ForwardRef(InputLabel))>
              <WithStyles(ForwardRef(OutlinedInput))
                autoFocus={false}
                fullWidth={false}
                id="textBox"
                inputRef={null}
                label={
                  <React.Fragment>
                    Enter your password here
                  </React.Fragment>
                }
                multiline={false}
                rows={1}
                type="password"
              >
                <ForwardRef(OutlinedInput)
                  autoFocus={false}
                  classes={
                    Object {
                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                      "adornedStart": "MuiOutlinedInput-adornedStart",
                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "input": "MuiOutlinedInput-input",
                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                      "marginDense": "MuiOutlinedInput-marginDense",
                      "multiline": "MuiOutlinedInput-multiline",
                      "notchedOutline": "MuiOutlinedInput-notchedOutline",
                      "root": "MuiOutlinedInput-root",
                    }
                  }
                  fullWidth={false}
                  id="textBox"
                  inputRef={null}
                  label={
                    <React.Fragment>
                      Enter your password here
                    </React.Fragment>
                  }
                  multiline={false}
                  rows={1}
                  type="password"
                >
                  <WithStyles(ForwardRef(InputBase))
                    autoFocus={false}
                    classes={
                      Object {
                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                        "adornedStart": "MuiOutlinedInput-adornedStart",
                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "input": "MuiOutlinedInput-input",
                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                        "marginDense": "MuiOutlinedInput-marginDense",
                        "multiline": "MuiOutlinedInput-multiline",
                        "notchedOutline": null,
                        "root": "MuiOutlinedInput-root",
                      }
                    }
                    fullWidth={false}
                    id="textBox"
                    inputComponent="input"
                    inputRef={null}
                    multiline={false}
                    renderSuffix={[Function]}
                    rows={1}
                    type="password"
                  >
                    <ForwardRef(InputBase)
                      autoFocus={false}
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "focused": "Mui-focused Mui-focused",
                          "formControl": "MuiInputBase-formControl",
                          "fullWidth": "MuiInputBase-fullWidth",
                          "input": "MuiInputBase-input MuiOutlinedInput-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                          "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                          "root": "MuiInputBase-root MuiOutlinedInput-root",
                        }
                      }
                      fullWidth={false}
                      id="textBox"
                      inputComponent="input"
                      inputRef={null}
                      multiline={false}
                      renderSuffix={[Function]}
                      rows={1}
                      type="password"
                    >
                      <div
                        className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                        onClick={[Function]}
                      >
                        <input
                          aria-invalid={false}
                          autoFocus={false}
                          className="MuiInputBase-input MuiOutlinedInput-input"
                          disabled={false}
                          id="textBox"
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          rows={1}
                          type="password"
                        />
                        <WithStyles(ForwardRef(NotchedOutline))
                          className="MuiOutlinedInput-notchedOutline"
                          label={
                            <React.Fragment>
                              Enter your password here
                            </React.Fragment>
                          }
                          labelWidth={0}
                          notched={false}
                        >
                          <ForwardRef(NotchedOutline)
                            className="MuiOutlinedInput-notchedOutline"
                            classes={
                              Object {
                                "legend": "PrivateNotchedOutline-legend-62",
                                "legendLabelled": "PrivateNotchedOutline-legendLabelled-63",
                                "legendNotched": "PrivateNotchedOutline-legendNotched-64",
                                "root": "PrivateNotchedOutline-root-61",
                              }
                            }
                            label={
                              <React.Fragment>
                                Enter your password here
                              </React.Fragment>
                            }
                            labelWidth={0}
                            notched={false}
                          >
                            <fieldset
                              aria-hidden={true}
                              className="PrivateNotchedOutline-root-61 MuiOutlinedInput-notchedOutline"
                            >
                              <legend
                                className="PrivateNotchedOutline-legendLabelled-63"
                              >
                                <span>
                                  Enter your password here
                                </span>
                              </legend>
                            </fieldset>
                          </ForwardRef(NotchedOutline)>
                        </WithStyles(ForwardRef(NotchedOutline))>
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </ForwardRef(OutlinedInput)>
              </WithStyles(ForwardRef(OutlinedInput))>
            </div>
          </ForwardRef(FormControl)>
        </WithStyles(ForwardRef(FormControl))>
      </ForwardRef(TextField)>
    </WithStyles(ForwardRef(TextField))>
  </div>
</ForwardRef>
`;
